// <auto-generated />
using AlphaGenAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlphaGenAPI.Migrations
{
    [DbContext(typeof(SqlContext))]
    [Migration("20220525102458_createdb")]
    partial class createdb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AlphaGenAPI.Models.Alan", b =>
                {
                    b.Property<int>("AlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlanId"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hedef")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AlanId");

                    b.ToTable("Alans");
                });

            modelBuilder.Entity("AlphaGenAPI.Models.AlanHareket", b =>
                {
                    b.Property<int>("AlanId")
                        .HasColumnType("int");

                    b.Property<int>("HareketId")
                        .HasColumnType("int");

                    b.HasKey("AlanId", "HareketId");

                    b.HasIndex("HareketId");

                    b.ToTable("AlanHarekets");
                });

            modelBuilder.Entity("AlphaGenAPI.Models.Hareket", b =>
                {
                    b.Property<int>("HareketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HareketId"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Target")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HareketId");

                    b.ToTable("Harekets");
                });

            modelBuilder.Entity("AlphaGenAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nick")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AlphaGenAPI.Models.UserAlan", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("AlanId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "AlanId");

                    b.HasIndex("AlanId");

                    b.ToTable("UserAlans");
                });

            modelBuilder.Entity("AlphaGenAPI.Models.UserInApp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Yas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserInApps");
                });

            modelBuilder.Entity("AlphaGenAPI.Models.UserParams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Biceps")
                        .HasColumnType("float");

                    b.Property<double>("Lenght")
                        .HasColumnType("float");

                    b.Property<int>("Old")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserParams");
                });

            modelBuilder.Entity("AlphaGenAPI.Models.AlanHareket", b =>
                {
                    b.HasOne("AlphaGenAPI.Models.Alan", "Alan")
                        .WithMany("AlanHarekets")
                        .HasForeignKey("AlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlphaGenAPI.Models.Hareket", "Hareket")
                        .WithMany("AlanHarekets")
                        .HasForeignKey("HareketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alan");

                    b.Navigation("Hareket");
                });

            modelBuilder.Entity("AlphaGenAPI.Models.UserAlan", b =>
                {
                    b.HasOne("AlphaGenAPI.Models.Alan", "Alan")
                        .WithMany("UserAlans")
                        .HasForeignKey("AlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlphaGenAPI.Models.User", "User")
                        .WithMany("UserAlans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AlphaGenAPI.Models.UserInApp", b =>
                {
                    b.HasOne("AlphaGenAPI.Models.User", "User")
                        .WithOne("UserInApps")
                        .HasForeignKey("AlphaGenAPI.Models.UserInApp", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AlphaGenAPI.Models.UserParams", b =>
                {
                    b.HasOne("AlphaGenAPI.Models.User", "User")
                        .WithOne("UserParams")
                        .HasForeignKey("AlphaGenAPI.Models.UserParams", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AlphaGenAPI.Models.Alan", b =>
                {
                    b.Navigation("AlanHarekets");

                    b.Navigation("UserAlans");
                });

            modelBuilder.Entity("AlphaGenAPI.Models.Hareket", b =>
                {
                    b.Navigation("AlanHarekets");
                });

            modelBuilder.Entity("AlphaGenAPI.Models.User", b =>
                {
                    b.Navigation("UserAlans");

                    b.Navigation("UserInApps")
                        .IsRequired();

                    b.Navigation("UserParams")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
